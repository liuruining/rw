package com.liuruining.model.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.DaoConfig;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.IdentityScopeType;

import com.liuruining.model.dao.Book;
import com.liuruining.model.dao.Book1;
import com.liuruining.model.dao.Book2;
import com.liuruining.model.dao.Book3;
import com.liuruining.model.dao.Word;
import com.liuruining.model.dao.WordLocation;

import com.liuruining.model.dao.BookDao;
import com.liuruining.model.dao.Book1Dao;
import com.liuruining.model.dao.Book2Dao;
import com.liuruining.model.dao.Book3Dao;
import com.liuruining.model.dao.WordDao;
import com.liuruining.model.dao.WordLocationDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bookDaoConfig;
    private final DaoConfig book1DaoConfig;
    private final DaoConfig book2DaoConfig;
    private final DaoConfig book3DaoConfig;
    private final DaoConfig wordDaoConfig;
    private final DaoConfig wordLocationDaoConfig;

    private final BookDao bookDao;
    private final Book1Dao book1Dao;
    private final Book2Dao book2Dao;
    private final Book3Dao book3Dao;
    private final WordDao wordDao;
    private final WordLocationDao wordLocationDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bookDaoConfig = daoConfigMap.get(BookDao.class).clone();
        bookDaoConfig.initIdentityScope(type);

        book1DaoConfig = daoConfigMap.get(Book1Dao.class).clone();
        book1DaoConfig.initIdentityScope(type);

        book2DaoConfig = daoConfigMap.get(Book2Dao.class).clone();
        book2DaoConfig.initIdentityScope(type);

        book3DaoConfig = daoConfigMap.get(Book3Dao.class).clone();
        book3DaoConfig.initIdentityScope(type);

        wordDaoConfig = daoConfigMap.get(WordDao.class).clone();
        wordDaoConfig.initIdentityScope(type);

        wordLocationDaoConfig = daoConfigMap.get(WordLocationDao.class).clone();
        wordLocationDaoConfig.initIdentityScope(type);

        bookDao = new BookDao(bookDaoConfig, this);
        book1Dao = new Book1Dao(book1DaoConfig, this);
        book2Dao = new Book2Dao(book2DaoConfig, this);
        book3Dao = new Book3Dao(book3DaoConfig, this);
        wordDao = new WordDao(wordDaoConfig, this);
        wordLocationDao = new WordLocationDao(wordLocationDaoConfig, this);

        registerDao(Book.class, bookDao);
        registerDao(Book1.class, book1Dao);
        registerDao(Book2.class, book2Dao);
        registerDao(Book3.class, book3Dao);
        registerDao(Word.class, wordDao);
        registerDao(WordLocation.class, wordLocationDao);
    }
    
    public void clear() {
        bookDaoConfig.getIdentityScope().clear();
        book1DaoConfig.getIdentityScope().clear();
        book2DaoConfig.getIdentityScope().clear();
        book3DaoConfig.getIdentityScope().clear();
        wordDaoConfig.getIdentityScope().clear();
        wordLocationDaoConfig.getIdentityScope().clear();
    }

    public BookDao getBookDao() {
        return bookDao;
    }

    public Book1Dao getBook1Dao() {
        return book1Dao;
    }

    public Book2Dao getBook2Dao() {
        return book2Dao;
    }

    public Book3Dao getBook3Dao() {
        return book3Dao;
    }

    public WordDao getWordDao() {
        return wordDao;
    }

    public WordLocationDao getWordLocationDao() {
        return wordLocationDao;
    }

}
